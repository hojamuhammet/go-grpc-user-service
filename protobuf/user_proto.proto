syntax = "proto3";

package protobuf;

option go_package = "./protobuf";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

// The UserService service provides operations for managing user data.
service UserService {
  // GetAllUsers retrieves a list of all users.
  rpc GetAllUsers(GetAllUsersRequest) returns (UserList) {
    option (google.api.http) = {
      get: "/users"
    };
  }

  // GetUserById retrieves a single user by their ID.
  rpc GetUserById(UserID) returns (User) {
    option (google.api.http) = {
      get: "/users/{id}"
    };
  }

  // DeleteUser deletes a user by their ID.
  rpc DeleteUser(UserID) returns (Empty) {
    option (google.api.http) = {
      delete: "/users/{id}"
    };
  }

  // BlockUser blocks a user by their ID.
  rpc BlockUser(UserID) returns (Empty) {
    option (google.api.http) = {
      post: "/users/{id}/block"
    };
  }
  
  // UnblockUser unblocks a user by their ID.
  rpc UnblockUser(UserID) returns (Empty) {
    option (google.api.http) = {
      post: "/users/{id}/unblock"
    };
  }

  // CreateUser creates a new user with the given input data.
  rpc CreateUser(UserInput) returns (User) {
    option (google.api.http) = {
      post: "/users/create"
      body: "*"
    };
  }

  // UpdateUser updates an existing user's data.
  rpc UpdateUser(UserUpdate) returns (User) {
    option (google.api.http) = {
      post: "/users/update"
      body: "*"
    };
  }
}

// The UserID message represents the ID of a user.
message UserID {
  int32 id = 1;
}

// The UserInput message represents the input data for creating a new user.
message UserInput {
  string first_name = 1;
  string last_name = 2;
  string phone_number = 3;
}

// The UserUpdate message represents the data for updating an existing user.
message UserUpdate {
  int32 id = 1;
  string first_name = 2;
  string last_name = 3;
  string phone_number = 4;
  bool blocked = 5;
}

// The User message represents a user with their information.
message User {
  int32 id = 1;
  string first_name = 2;
  string last_name = 3;
  string phone_number = 4;
  bool blocked = 5;
  google.protobuf.Timestamp registration_date = 7;
}

// The UserList message represents a list of users.
message UserList {
  repeated User users = 1;
}

// The Empty message represents an empty response.
message Empty {}

message Pagination {
  int32 page_size = 1;
  string page_token = 2;
}

message GetAllUsersRequest {
  Pagination pagination = 1;
}